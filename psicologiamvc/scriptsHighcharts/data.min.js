!function (a) {
    "object" === typeof module && module.exports ? (a["default"] = a, module.exports = a) : "function" === typeof define && define.amd ? define("highcharts/modules/data", ["highcharts"], function (b) {
        a(b);
        a.Highcharts = b;
        return a;
    }) : a("undefined" !== typeof Highcharts ? Highcharts : void 0);
}(function (a) {
    function b(a, b, c, d) {
        a.hasOwnProperty(b) || (a[b] = d.apply(null, c), "function" === typeof CustomEvent && window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", {
            detail: {
                path: b,
                module: a[b]
            }
        })));
    }
    a = a ? a._modules : {};
    b(a, "Core/HttpUtilities.js", [a["Core/Globals.js"], a["Core/Utilities.js"]], function (a, b) {
        var c = a.doc, d = b.createElement, e = b.discardElement, f = b.merge, g = b.objectEach, h = {
            ajax: function (a) {
                var b = f(!0, {
                    url: !1,
                    type: "get",
                    dataType: "json",
                    success: !1,
                    error: !1,
                    data: !1,
                    headers: {}
                }, a);
                a = {
                    json: "application/json",
                    xml: "application/xml",
                    text: "text/plain",
                    octet: "application/octet-stream"
                };
                var c = new XMLHttpRequest();
                if (!b.url) return !1;
                c.open(b.type.toUpperCase(), b.url, !0);
                b.headers["Content-Type"] || c.setRequestHeader("Content-Type", a[b.dataType] || a.text);
                g(b.headers, function (a, b) {
                    c.setRequestHeader(b, a);
                });
                b.responseType && (c.responseType = b.responseType);
                c.onreadystatechange = function () {
                    if (4 === c.readyState) {
                        if (200 === c.status) {
                            if ("blob" !== b.responseType) {
                                var a = c.responseText;
                                if ("json" === b.dataType) try {
                                    a = JSON.parse(a);
                                } catch (d) {
                                    b.error && b.error(c, d);
                                    return;
                                }
                            }
                            return b.success && b.success(a, c);
                        }
                        b.error && b.error(c, c.responseText);
                    }
                };
                try {
                    b.data = JSON.stringify(b.data);
                } catch (d) { }
                c.send(b.data || !0);
            },
            getJSON: function (a, b) {
                h.ajax({
                    url: a,
                    success: b,
                    dataType: "json",
                    headers: {
                        "Content-Type": "text/plain"
                    }
                });
            },
            post: function (a, b, h) {
                var i = d("form", f({
                    method: "post",
                    action: a,
                    enctype: "multipart/form-data"
                }, h), {
                    display: "none"
                }, c.body);
                g(b, function (a, b) {
                    d("input", {
                        type: "hidden",
                        name: b,
                        value: a
                    }, null, i);
                });
                i.submit();
                e(i);
            }
        };
        return h;
    });
    b(a, "Extensions/Data.js", [a["Core/Chart/Chart.js"], a["Core/Globals.js"], a["Core/HttpUtilities.js"], a["Core/Series/Point.js"], a["Core/Series/SeriesRegistry.js"], a["Core/Utilities.js"], a["Core/DefaultOptions.js"]], function (a, b, c, d, e, f, g) {
        var h = b.doc, i = c.ajax, j = e.seriesTypes, k = g.getOptions;
        c = f.addEvent;
        var l = f.defined, m = f.extend, n = f.fireEvent, o = f.isNumber, p = f.merge, q = f.objectEach, r = f.pick, s = f.splat;
        f = function () {
            function a(a, b, c) {
                this.options = this.rawColumns = this.firstRowAsNames = this.chartOptions = this.chart = void 0;
                this.dateFormats = {
                    "YYYY/mm/dd": {
                        regex: /^([0-9]{4})[\-\/\.]([0-9]{1,2})[\-\/\.]([0-9]{1,2})$/,
                        parser: function (a) {
                            return a ? Date.UTC(+a[1], a[2] - 1, +a[3]) : 0 / 0;
                        }
                    },
                    "dd/mm/YYYY": {
                        regex: /^([0-9]{1,2})[\-\/\.]([0-9]{1,2})[\-\/\.]([0-9]{4})$/,
                        parser: function (a) {
                            return a ? Date.UTC(+a[3], a[2] - 1, +a[1]) : 0 / 0;
                        },
                        alternative: "mm/dd/YYYY"
                    },
                    "mm/dd/YYYY": {
                        regex: /^([0-9]{1,2})[\-\/\.]([0-9]{1,2})[\-\/\.]([0-9]{4})$/,
                        parser: function (a) {
                            return a ? Date.UTC(+a[3], a[1] - 1, +a[2]) : 0 / 0;
                        }
                    },
                    "dd/mm/YY": {
                        regex: /^([0-9]{1,2})[\-\/\.]([0-9]{1,2})[\-\/\.]([0-9]{2})$/,
                        parser: function (a) {
                            if (!a) return 0 / 0;
                            var b = +a[3];
                            b = b > new Date().getFullYear() - 2e3 ? b + 1900 : b + 2e3;
                            return Date.UTC(b, a[2] - 1, +a[1]);
                        },
                        alternative: "mm/dd/YY"
                    },
                    "mm/dd/YY": {
                        regex: /^([0-9]{1,2})[\-\/\.]([0-9]{1,2})[\-\/\.]([0-9]{2})$/,
                        parser: function (a) {
                            return a ? Date.UTC(+a[3] + 2e3, a[1] - 1, +a[2]) : 0 / 0;
                        }
                    }
                };
                this.init(a, b, c);
            }
            a.prototype.init = function (a, b, c) {
                var d = a.decimalPoint;
                b && (this.chartOptions = b);
                c && (this.chart = c);
                "." !== d && "," !== d && (d = void 0);
                this.options = a;
                this.columns = a.columns || this.rowsToColumns(a.rows) || [];
                this.firstRowAsNames = r(a.firstRowAsNames, this.firstRowAsNames, !0);
                this.decimalRegex = d && new RegExp("^(-?[0-9]+)" + d + "([0-9]+)$");
                void 0 !== this.liveDataTimeout && clearTimeout(this.liveDataTimeout);
                this.rawColumns = [];
                if (this.columns.length) {
                    this.dataFound();
                    var e = !this.hasURLOption(a);
                }
                e || (e = this.fetchLiveData());
                e || (e = !!this.parseCSV().length);
                e || (e = !!this.parseTable().length);
                e || (e = this.parseGoogleSpreadsheet());
                !e && a.afterComplete && a.afterComplete();
            };
            a.prototype.hasURLOption = function (a) {
                return !(!a || !(a.rowsURL || a.csvURL || a.columnsURL));
            };
            a.prototype.getColumnDistribution = function () {
                var a = this.chartOptions, b = this.options, c = [], d = function (a) {
                    return (j[a || "line"].prototype.pointArrayMap || [0]).length;
                }, e = a && a.chart && a.chart.type, f = [], g = [], h = 0;
                b = b && b.seriesMapping || a && a.series && a.series.map(function () {
                    return {
                        x: 0
                    };
                }) || [];
                var i;
                (a && a.series || []).forEach(function (a) {
                    f.push(d(a.type || e));
                });
                b.forEach(function (a) {
                    c.push(a.x || 0);
                });
                0 === c.length && c.push(0);
                b.forEach(function (b) {
                    var c = new t(), k = f[h] || d(e), m = (a && a.series || [])[h] || {}, n = j[m.type || e || "line"].prototype.pointArrayMap, o = n || ["y"];
                    (l(b.x) || m.isCartesian || !n) && c.addColumnReader(b.x, "x");
                    q(b, function (a, b) {
                        "x" !== b && c.addColumnReader(a, b);
                    });
                    for (i = 0; i < k; i++) c.hasReader(o[i]) || c.addColumnReader(void 0, o[i]);
                    g.push(c);
                    h++;
                });
                b = j[e || "line"].prototype.pointArrayMap;
                "undefined" === typeof b && (b = ["y"]);
                this.valueCount = {
                    global: d(e),
                    xColumns: c,
                    individual: f,
                    seriesBuilders: g,
                    globalPointArrayMap: b
                };
            };
            a.prototype.dataFound = function () {
                this.options.switchRowsAndColumns && (this.columns = this.rowsToColumns(this.columns));
                this.getColumnDistribution();
                this.parseTypes();
                !1 !== this.parsed() && this.complete();
            };
            a.prototype.parseCSV = function (a) {
                function b(a, b, c, d) {
                    function e(b) {
                        k = a[b];
                        m = a[b - 1];
                        n = a[b + 1];
                    }
                    function f(a) {
                        l.length < s + 1 && l.push([a]);
                        l[s][l[s].length - 1] !== a && l[s].push(a);
                    }
                    function g() {
                        i > r || r > j ? (++r, q = "") : (!isNaN(parseFloat(q)) && isFinite(q) ? (q = parseFloat(q),
                            f("number")) : isNaN(Date.parse(q)) ? f("string") : (q = q.replace(/\//g, "-"),
                                f("date")), o.length < s + 1 && o.push([]), c || (o[s][b] = q), q = "", ++s, ++r);
                    }
                    var h = 0, k = "", m = "", n = "", q = "", r = 0, s = 0;
                    if (a.trim().length && "#" !== a.trim()[0]) {
                        for (; h < a.length; h++) if (e(h), '"' === k) for (e(++h); h < a.length && ('"' !== k || '"' === m || '"' === n);) {
                            if ('"' !== k || '"' === k && '"' !== m) q += k;
                            e(++h);
                        } else d && d[k] ? d[k](k, q) && g() : k === p ? g() : q += k;
                        g();
                    }
                }
                function c(a) {
                    var b = 0, c = 0, d = !1;
                    a.some(function (a, d) {
                        var e = !1, f = "";
                        if (13 < d) return !0;
                        for (var g = 0; g < a.length; g++) {
                            d = a[g];
                            var h = a[g + 1];
                            var i = a[g - 1];
                            if ("#" === d) break;
                            if ('"' === d) if (e) {
                                if ('"' !== i && '"' !== h) {
                                    for (; " " === h && g < a.length;) h = a[++g];
                                    "undefined" !== typeof m[h] && m[h]++;
                                    e = !1;
                                }
                            } else e = !0; else "undefined" !== typeof m[d] ? (f = f.trim(), isNaN(Date.parse(f)) ? !isNaN(f) && isFinite(f) || m[d]++ : m[d]++,
                                f = "") : f += d;
                            "," === d && c++;
                            "." === d && b++;
                        }
                    });
                    d = m[";"] > m[","] ? ";" : ",";
                    f.decimalPoint || (f.decimalPoint = b > c ? "." : ",", e.decimalRegex = new RegExp("^(-?[0-9]+)" + f.decimalPoint + "([0-9]+)$"));
                    return d;
                }
                function d(a, b) {
                    var c = [], d = 0, g = !1, h = [], i = [], j;
                    if (!b || b > a.length) b = a.length;
                    for (; d < b; d++) if ("undefined" !== typeof a[d] && a[d] && a[d].length) {
                        var k = a[d].trim().replace(/\//g, " ").replace(/\-/g, " ").replace(/\./g, " ").split(" ");
                        c = ["", "", ""];
                        for (j = 0; j < k.length; j++) j < c.length && (k[j] = parseInt(k[j], 10), k[j] && (i[j] = !i[j] || i[j] < k[j] ? k[j] : i[j],
                            "undefined" !== typeof h[j] ? h[j] !== k[j] && (h[j] = !1) : h[j] = k[j], 31 < k[j] ? c[j] = 100 > k[j] ? "YY" : "YYYY" : 12 < k[j] && 31 >= k[j] ? (c[j] = "dd",
                                g = !0) : c[j].length || (c[j] = "mm")));
                    }
                    if (g) {
                        for (j = 0; j < h.length; j++) !1 !== h[j] ? 12 < i[j] && "YY" !== c[j] && "YYYY" !== c[j] && (c[j] = "YY") : 12 < i[j] && "mm" === c[j] && (c[j] = "dd");
                        3 === c.length && "dd" === c[1] && "dd" === c[2] && (c[2] = "YY");
                        a = c.join("/");
                        return (f.dateFormats || e.dateFormats)[a] ? a : (n("deduceDateFailed"), "YYYY/mm/dd");
                    }
                    return "YYYY/mm/dd";
                }
                var e = this, f = a || this.options, g = f.csv;
                a = "undefined" !== typeof f.startRow && f.startRow ? f.startRow : 0;
                var h = f.endRow || Number.MAX_VALUE, i = "undefined" !== typeof f.startColumn && f.startColumn ? f.startColumn : 0, j = f.endColumn || Number.MAX_VALUE, k = 0, l = [], m = {
                    ",": 0,
                    ";": 0,
                    "	": 0
                };
                var o = this.columns = [];
                g && f.beforeParse && (g = f.beforeParse.call(this, g));
                if (g) {
                    g = g.replace(/\r\n/g, "\n").replace(/\r/g, "\n").split(f.lineDelimiter || "\n");
                    if (!a || 0 > a) a = 0;
                    if (!h || h >= g.length) h = g.length - 1;
                    if (f.itemDelimiter) var p = f.itemDelimiter; else p = null, p = c(g);
                    var q = 0;
                    for (k = a; k <= h; k++) "#" === g[k][0] ? q++ : b(g[k], k - a - q);
                    f.columnTypes && 0 !== f.columnTypes.length || !l.length || !l[0].length || "date" !== l[0][1] || f.dateFormat || (f.dateFormat = d(o[0]));
                    this.dataFound();
                }
                return o;
            };
            a.prototype.parseTable = function () {
                var a = this.options, b = a.table, c = this.columns || [], d = a.startRow || 0, e = a.endRow || Number.MAX_VALUE, f = a.startColumn || 0, g = a.endColumn || Number.MAX_VALUE;
                b && ("string" === typeof b && (b = h.getElementById(b)), [].forEach.call(b.getElementsByTagName("tr"), function (a, b) {
                    b >= d && b <= e && [].forEach.call(a.children, function (a, e) {
                        var h = c[e - f], i = 1;
                        if (("TD" === a.tagName || "TH" === a.tagName) && e >= f && e <= g) for (c[e - f] || (c[e - f] = []),
                            c[e - f][b - d] = a.innerHTML; b - d >= i && void 0 === h[b - d - i];) h[b - d - i] = null,
                                i++;
                    });
                }), this.dataFound());
                return c;
            };
            a.prototype.fetchLiveData = function () {
                function a(j) {
                    function k(h, k, l) {
                        function m() {
                            f && c.liveDataURL === h && (b.liveDataTimeout = setTimeout(a, g));
                        }
                        if (!h || !/^(http|\/|\.\/|\.\.\/)/.test(h)) return h && d.error && d.error("Invalid URL"),
                            !1;
                        j && (clearTimeout(b.liveDataTimeout), c.liveDataURL = h);
                        i({
                            url: h,
                            dataType: l || "json",
                            success: function (a) {
                                c && c.series && k(a);
                                m();
                            },
                            error: function (a, b) {
                                3 > ++e && m();
                                return d.error && d.error(b, a);
                            }
                        });
                        return !0;
                    }
                    k(h.csvURL, function (a) {
                        c.update({
                            data: {
                                csv: a
                            }
                        });
                    }, "text") || k(h.rowsURL, function (a) {
                        c.update({
                            data: {
                                rows: a
                            }
                        });
                    }) || k(h.columnsURL, function (a) {
                        c.update({
                            data: {
                                columns: a
                            }
                        });
                    });
                }
                var b = this, c = this.chart, d = this.options, e = 0, f = d.enablePolling, g = 1e3 * (d.dataRefreshRate || 2), h = p(d);
                if (!this.hasURLOption(d)) return !1;
                1e3 > g && (g = 1e3);
                delete d.csvURL;
                delete d.rowsURL;
                delete d.columnsURL;
                a(!0);
                return this.hasURLOption(d);
            };
            a.prototype.parseGoogleSpreadsheet = function () {
                function a(e) {
                    var h = ["https://sheets.googleapis.com/v4/spreadsheets", d, "values", g(), "?alt=json&majorDimension=COLUMNS&valueRenderOption=UNFORMATTED_VALUE&dateTimeRenderOption=FORMATTED_STRING&key=" + c.googleAPIKey].join("/");
                    i({
                        url: h,
                        dataType: "json",
                        success: function (d) {
                            e(d);
                            c.enablePolling && (b.liveDataTimeout = setTimeout(function () {
                                a(e);
                            }, f));
                        },
                        error: function (a, b) {
                            return c.error && c.error(b, a);
                        }
                    });
                }
                var b = this, c = this.options, d = c.googleSpreadsheetKey, e = this.chart, f = Math.max(1e3 * (c.dataRefreshRate || 2), 4e3), g = function () {
                    if (c.googleSpreadsheetRange) return c.googleSpreadsheetRange;
                    var a = ("ABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(c.startColumn || 0) || "A") + ((c.startRow || 0) + 1), b = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(r(c.endColumn, -1)) || "ZZ";
                    l(c.endRow) && (b += c.endRow + 1);
                    return a + ":" + b;
                };
                d && (delete c.googleSpreadsheetKey, a(function (a) {
                    a = a.values;
                    if (!a || 0 === a.length) return !1;
                    var c = a.reduce(function (a, b) {
                        return Math.max(a, b.length);
                    }, 0);
                    a.forEach(function (a) {
                        for (var b = 0; b < c; b++) "undefined" === typeof a[b] && (a[b] = null);
                    });
                    e && e.series ? e.update({
                        data: {
                            columns: a
                        }
                    }) : (b.columns = a, b.dataFound());
                }));
                return !1;
            };
            a.prototype.trim = function (a, b) {
                "string" === typeof a && (a = a.replace(/^\s+|\s+$/g, ""), b && /^[0-9\s]+$/.test(a) && (a = a.replace(/\s/g, "")),
                    this.decimalRegex && (a = a.replace(this.decimalRegex, "$1.$2")));
                return a;
            };
            a.prototype.parseTypes = function () {
                for (var a = this.columns, b = a.length; b--;) this.parseColumn(a[b], b);
            };
            a.prototype.parseColumn = function (a, b) {
                var c = this.rawColumns, d = this.columns, e = this.firstRowAsNames, f = -1 !== this.valueCount.xColumns.indexOf(b), g = [], h = this.chartOptions, i = (this.options.columnTypes || [])[b];
                h = f && (h && h.xAxis && "category" === s(h.xAxis)[0].type || "string" === i);
                var j = l(a.name), k = a.length, m, n;
                for (c[b] || (c[b] = []); k--;) {
                    var p = g[k] || a[k];
                    var q = this.trim(p);
                    var r = this.trim(p, !0);
                    var t = parseFloat(r);
                    "undefined" === typeof c[b][k] && (c[b][k] = q);
                    h || 0 === k && e && !j ? a[k] = "" + q : +r === t ? (a[k] = t, 31536e6 < t && "float" !== i ? a.isDatetime = !0 : a.isNumeric = !0,
                        "undefined" !== typeof a[k + 1] && (n = t > a[k + 1])) : (q && q.length && (m = this.parseDate(p)),
                            f && o(m) && "float" !== i ? (g[k] = p, a[k] = m, a.isDatetime = !0, "undefined" !== typeof a[k + 1] && (p = m > a[k + 1],
                                p !== n && "undefined" !== typeof n && (this.alternativeFormat ? (this.dateFormat = this.alternativeFormat,
                                    k = a.length, this.alternativeFormat = this.dateFormats[this.dateFormat].alternative) : a.unsorted = !0),
                                n = p)) : (a[k] = "" === q ? null : q, 0 !== k && (a.isDatetime || a.isNumeric) && (a.mixed = !0)));
                }
                f && a.mixed && (d[b] = c[b]);
                if (f && n && this.options.sort) for (b = 0; b < d.length; b++) d[b].reverse(),
                    e && d[b].unshift(d[b].pop());
            };
            a.prototype.parseDate = function (a) {
                var b = this.options.parseDate, c, d = this.options.dateFormat || this.dateFormat, e;
                if (b) var f = b(a); else if ("string" === typeof a) {
                    if (d) (b = this.dateFormats[d]) || (b = this.dateFormats["YYYY/mm/dd"]), (e = a.match(b.regex)) && (f = b.parser(e)); else for (c in this.dateFormats) if (b = this.dateFormats[c],
                        e = a.match(b.regex)) {
                        this.dateFormat = c;
                        this.alternativeFormat = b.alternative;
                        f = b.parser(e);
                        break;
                    }
                    e || (a.match(/:.+(GMT|UTC|[Z+-])/) && (a = a.replace(/\s*(?:GMT|UTC)?([+-])(\d\d)(\d\d)$/, "$1$2:$3").replace(/(?:\s+|GMT|UTC)([+-])/, "$1").replace(/(\d)\s*(?:GMT|UTC|Z)$/, "$1+00:00")),
                        e = Date.parse(a), "object" === typeof e && null !== e && e.getTime ? f = e.getTime() - 6e4 * e.getTimezoneOffset() : o(e) && (f = e - 6e4 * new Date(e).getTimezoneOffset()));
                }
                return f;
            };
            a.prototype.rowsToColumns = function (a) {
                var b, c;
                if (a) {
                    var d = [];
                    var e = a.length;
                    for (b = 0; b < e; b++) {
                        var f = a[b].length;
                        for (c = 0; c < f; c++) d[c] || (d[c] = []), d[c][b] = a[b][c];
                    }
                }
                return d;
            };
            a.prototype.getData = function () {
                if (this.columns) return this.rowsToColumns(this.columns).slice(1);
            };
            a.prototype.parsed = function () {
                if (this.options.parsed) return this.options.parsed.call(this, this.columns);
            };
            a.prototype.getFreeIndexes = function (a, b) {
                var c, d = [], e = [];
                for (c = 0; c < a; c += 1) d.push(!0);
                for (a = 0; a < b.length; a += 1) {
                    var f = b[a].getReferencedColumnIndexes();
                    for (c = 0; c < f.length; c += 1) d[f[c]] = !1;
                }
                for (c = 0; c < d.length; c += 1) d[c] && e.push(c);
                return e;
            };
            a.prototype.complete = function () {
                var a = this.columns, b, c = this.options, d, e, f = [];
                if (c.complete || c.afterComplete) {
                    if (this.firstRowAsNames) for (d = 0; d < a.length; d++) {
                        var g = a[d];
                        l(g.name) || (g.name = r(g.shift(), "").toString());
                    }
                    g = [];
                    var h = this.getFreeIndexes(a.length, this.valueCount.seriesBuilders);
                    for (d = 0; d < this.valueCount.seriesBuilders.length; d++) {
                        var i = this.valueCount.seriesBuilders[d];
                        i.populateColumns(h) && f.push(i);
                    }
                    for (; 0 < h.length;) {
                        i = new t();
                        i.addColumnReader(0, "x");
                        d = h.indexOf(0);
                        -1 !== d && h.splice(d, 1);
                        for (d = 0; d < this.valueCount.global; d++) i.addColumnReader(void 0, this.valueCount.globalPointArrayMap[d]);
                        i.populateColumns(h) && f.push(i);
                    }
                    0 < f.length && 0 < f[0].readers.length && (i = a[f[0].readers[0].columnIndex],
                        "undefined" !== typeof i && (i.isDatetime ? b = "datetime" : i.isNumeric || (b = "category")));
                    if ("category" === b) for (d = 0; d < f.length; d++) for (i = f[d], h = 0; h < i.readers.length; h++) "x" === i.readers[h].configName && (i.readers[h].configName = "name");
                    for (d = 0; d < f.length; d++) {
                        i = f[d];
                        h = [];
                        for (e = 0; e < a[0].length; e++) h[e] = i.read(a, e);
                        g[d] = {
                            data: h
                        };
                        i.name && (g[d].name = i.name);
                        "category" === b && (g[d].turboThreshold = 0);
                    }
                    a = {
                        series: g
                    };
                    b && (a.xAxis = {
                        type: b
                    }, "category" === b && (a.xAxis.uniqueNames = !1));
                    c.complete && c.complete(a);
                    c.afterComplete && c.afterComplete(a);
                }
            };
            a.prototype.update = function (a, b) {
                var c = this.chart, d = c.options;
                a && (a.afterComplete = function (a) {
                    a && (a.xAxis && c.xAxis[0] && a.xAxis.type === c.xAxis[0].options.type && delete a.xAxis,
                        c.update(a, b, !0));
                }, p(!0, d.data, a), d.data && d.data.googleSpreadsheetKey && !a.columns && delete d.data.columns,
                    this.init(d.data));
            };
            return a;
        }();
        b.data = function (a, c, d) {
            return new b.Data(a, c, d);
        };
        c(a, "init", function (a) {
            var c = this, d = a.args[0] || {}, e = a.args[1], f = k().data;
            (f || d && d.data) && !c.hasDataDef && (c.hasDataDef = !0, f = p(f, d.data), c.data = new b.Data(m(f, {
                afterComplete: function (a) {
                    var b;
                    if (Object.hasOwnProperty.call(d, "series")) if ("object" === typeof d.series) for (b = Math.max(d.series.length, a && a.series ? a.series.length : 0); b--;) {
                        var f = d.series[b] || {};
                        d.series[b] = p(f, a && a.series ? a.series[b] : {});
                    } else delete d.series;
                    d = p(a, d);
                    c.init(d, e);
                }
            }), d, c), a.preventDefault());
        });
        var t = function () {
            function a() {
                this.readers = [];
                this.pointIsArray = !0;
                this.name = void 0;
            }
            a.prototype.populateColumns = function (a) {
                var b = !0;
                this.readers.forEach(function (b) {
                    "undefined" === typeof b.columnIndex && (b.columnIndex = a.shift());
                });
                this.readers.forEach(function (a) {
                    "undefined" === typeof a.columnIndex && (b = !1);
                });
                return b;
            };
            a.prototype.read = function (a, b) {
                var c = this.pointIsArray, e = c ? [] : {};
                this.readers.forEach(function (f) {
                    var g = a[f.columnIndex][b];
                    c ? e.push(g) : 0 < f.configName.indexOf(".") ? d.prototype.setNestedProperty(e, g, f.configName) : e[f.configName] = g;
                });
                if ("undefined" === typeof this.name && 2 <= this.readers.length) {
                    var f = this.getReferencedColumnIndexes();
                    2 <= f.length && (f.shift(), f.sort(function (a, b) {
                        return a - b;
                    }), this.name = a[f.shift()].name);
                }
                return e;
            };
            a.prototype.addColumnReader = function (a, b) {
                this.readers.push({
                    columnIndex: a,
                    configName: b
                });
                "x" !== b && "y" !== b && "undefined" !== typeof b && (this.pointIsArray = !1);
            };
            a.prototype.getReferencedColumnIndexes = function () {
                var a, b = [];
                for (a = 0; a < this.readers.length; a += 1) {
                    var c = this.readers[a];
                    "undefined" !== typeof c.columnIndex && b.push(c.columnIndex);
                }
                return b;
            };
            a.prototype.hasReader = function (a) {
                var b;
                for (b = 0; b < this.readers.length; b += 1) {
                    var c = this.readers[b];
                    if (c.configName === a) return !0;
                }
            };
            return a;
        }();
        b.Data = f;
        return b.Data;
    });
    b(a, "masters/modules/data.src.js", [a["Core/Globals.js"], a["Core/HttpUtilities.js"], a["Extensions/Data.js"]], function (a, b, c) {
        a.ajax = b.ajax;
        a.getJSON = b.getJSON;
        a.post = b.post;
        a.Data = c;
        a.HttpUtilities = b;
    });
});